algorithm:                              # social force model

    internal_force_factor: 50.0         # expresses how much an actor will be single-minded to reach its current goal (ignoring obstacles)
    interaction_force_factor: 300.0     # expresses how much an actor's movement will be constrained by presence of surrounding obstacles, 500.0 -> possible overdrive in tight places
    max_force: 2000.0                   # useful to not allow actor to perform immediate movement when some force peak occurs
    min_force: 300.0                    # useful to not allow actor to stop (local minimae problem)
    fov: 2.00                           # how wide (in rad) does actor "see" other objects, NOTE: an interaction force generated by an obstacle when it is out of this range decreases exponentially
    max_speed: 1.50                     # maximum allowable speed (in m/s)
    mass: 1                             # mass of an actor (in kg) (ATM: 80 kg makes movement very slow)
    maneuverability: 6.5                # smaller makes actor more reluctant to immediate rotations; too big will generate actor's yaw angle oscillations (especially near obstacles)
    heterogenous_population: false      # whether to randomize algorithm parameters among whole population members
    static_obj_interaction: 0           # SocialForceModel.h, look for enums declaration section
    box_inflation_type: 1               # 0 - only other objects, 1 - all objects; valid only when bounding type chosen is BOX; bounding type is an actor's parameter
    opposite_force: 0                   # 0 - go towards goal, 1 - rotate left, for details see OppositeForceMethod enum in include/sfm/core/SocialForceModel.h
    disable_interaction_forces: false   # true disables `local planner` (actor will head according to the global plan (optimal))

visualization:

    markers_pub_period: 0.15            # how often a typical visualization markers should be published (in each X seconds)
    publish_grid: true                  # whether to visualize vector field (if set to `false` - other GRID-related parameters have no effect) 
    grid_resolution: 0.65               # side of a grid cell (in meters), the smaller the higher number of SFM iterations needed (could be pretty time consuming)
    grid_pub_period: 0.25               # how often a grid needs to be updated (note that it anyway won't be update if nobody subcribes it)  (in each X seconds)    

world_dictionary:

    world_model: 
      - {name: none, wall_width: 0.2}   # name of the model whose dimensions cover whole world (i.e. actor workspace is located fully within the bounds of the model); set this field to `none` if each wall is a separate model
                                        # width of the wall

    ignored_models:                     # NOTE: must be empty if one wants to use ignored_models list from the .world file
      - cafe
      - ground_plane
      - sun

    # unknown objects will have default values (mass of 5 kg and immunity of 0.75)
    model_description:
      #- cafe_table: {name: table, mass: 10, immunity: 0.7 }
      - {name: table, mass: 10, immunity: 0.7 }
      - {name: bus, mass: 2000, immunity: 0.7 }
      - {name: suv, mass: 2000, immunity: 0.7 }