initialization:

    pose: [1.0, 1.0, 0.0, 0.0, 0.0, 0.75]   # {x, y, z, r, p, y}
    stance: 1                               # look for core/Enums.h

general:

    bounding_type: 2                    # look for core/Enums.h
    animation_factor: 4.5               # how fast the animation is played
    animation_speed_rotation: 0.07      # dist_traveled
    target_tolerance: 1.25              # in meters
    target_reach_max_time: 60.0         # in seconds
    target_reachable_check_period: 2.0  # in seconds
    world_bound_x: [-3.20, +3.80]       # in meters, actor will not be allowed to move further along X axis
    world_bound_y: [-10.20, +3.80]      # in meters, actor will not be allowed to move further along X axis

sfm:                                    # social force model

    fov: 2.00                           # how wide (in rad) does actor "see" other objects, NOTE: an interaction force generated by an obstacle when it is out of this range decreases exponentially
    max_speed: 1.50                     # maximum allowable speed (in m/s)
    mass: 80                            # mass of an actor (in kg)
    internal_force_factor: 100.0        # expresses how much an actor will be single-minded to reach its current goal (ignoring obstacles)
    interaction_force_factor: 3000.0    # expresses how much an actor's movement will be constrained by presence of surrounding obstacles
    min_force: 300.0                    # useful to not allow actor to stop (local minimae problem)
    max_force: 2000.0                   # useful to not allow actor to perform immediate movement when some force peak occurs
    static_obj_interaction: 1           # SocialForceModel.h, look for enums declaration section
    heterogenous_population: false      # whether to randomize algorithm parameters among whole population members
    box_inflation_type: 0               # 0 - all objects, 1 - only other objects; valid only when bounding type chosen is BOX
