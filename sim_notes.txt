TODO: ROS interface with actor's info (pose, vel, acc) etc. (ros::isInitialized, pass the pointer to the ActorPlugin class member)
TODO: service 'stand `pose`' or 'lie `pose`' (pose as a target and stance change after reaching it)
TODO: Actor Helper class that stores all Set etc methods as well as velocity vector and map
TODO: service to switch to teleop control
TODO: service to manually set target - after reaching actor stands still
TODO: after reaching target - let the actor rest for a while and then choose a new goal, rotate and go in this new direction
TODO: local minimae check - if for a few seconds actor hasnt moved then choose a new goal
TODOs from notebook

o maybe the _is_actor flag could be avoided? social force is calculated only then actor is moving? TODO

current tasks:
o 	actors accelerate quickly when close to each other
o 	actor2 sometimes has non-zero lin vel while nearly stopped? 				could not reproduce in a while..
o 	jumps (!) 																	X SOLVED - seems it was some angle calculation overflow or sth
o 	interaction force seems to have wrong sign - object attract (!) the actor - X SOLVED - wrong direction of perpendicular vector
o 	actors "collide" with tables (inflation/bounding box of a obstacle)
o 	create gridmap for visualization


fov parameter <-> egocentricity

move all properties of the actor from .world file to .yaml config!

objects database:
ignore: ground_plane
		sun